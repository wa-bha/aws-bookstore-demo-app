{"ast":null,"code":"import _regeneratorRuntime from\"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Auth}from\"aws-amplify\";import React from\"react\";import{Redirect}from'react-router';import{FormGroup,FormControl,ControlLabel,Button,Glyphicon,HelpBlock}from\"react-bootstrap\";import\"./signup.css\";import\"./home.css\";var emailRegex=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;var Signup=/*#__PURE__*/function(_React$Component){_inherits(Signup,_React$Component);var _super=_createSuper(Signup);function Signup(props){var _this;_classCallCheck(this,Signup);_this=_super.call(this,props);_this.onEmailChange=function(event){var target=event.target;_this.setState({email:target.value,emailValid:emailRegex.test(target.value.toLowerCase())?'success':'error'});};_this.onPasswordChange=function(event){var target=event.target;_this.setState({password:target.value,passwordValid:target.value.length<8?'error':'success'});};_this.onConfirmPasswordChange=function(event){var target=event.target;_this.setState({confirmPassword:target.value,confirmPasswordValid:target.value!==_this.state.password?'error':'success'});};_this.onConfirmationCodeChange=function(event){var target=event.target;_this.setState({confirmationCode:target.value,confirmationCodeValid:target.value.length>0?'error':'success'});};_this.onSignup=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_this.setState({loading:true});_context.prev=2;_context.next=5;return Auth.signUp({username:_this.state.email,password:_this.state.password});case 5:user=_context.sent;_this.setState({user:user,loading:false});_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);alert(_context.t0.message);_this.setState({loading:false});case 13:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();_this.onConfirm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();_this.setState({loading:true});_context2.prev=2;_context2.next=5;return Auth.confirmSignUp(_this.state.email,_this.state.confirmationCode);case 5:_context2.next=7;return Auth.signIn(_this.state.email,_this.state.password);case 7:_this.props.userHasAuthenticated(true);_this.setState({redirect:true});_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](2);alert(_context2.t0.message);_this.setState({loading:false});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[2,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.showConfirmationForm=function(){if(_this.state.redirect)return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});return/*#__PURE__*/React.createElement(\"form\",{onSubmit:_this.onConfirm},/*#__PURE__*/React.createElement(FormGroup,{controlId:\"confirmationCode\"},/*#__PURE__*/React.createElement(ControlLabel,null,\"Confirmation code\"),/*#__PURE__*/React.createElement(FormControl,{name:\"code\",type:\"tel\",bsSize:\"large\",value:_this.state.confirmationCode,onChange:_this.onConfirmationCodeChange}),/*#__PURE__*/React.createElement(FormControl.Feedback,null),/*#__PURE__*/React.createElement(HelpBlock,null,\"A confirmation code will be sent to the email address provided\")),/*#__PURE__*/React.createElement(Button,{block:true,bsSize:\"large\",type:\"submit\",disabled:_this.state.confirmationCodeValid==='success'},_this.state.loading&&/*#__PURE__*/React.createElement(Glyphicon,{glyph:\"refresh\",className:\"spinning\"}),\"Confirm\"));};_this.showSignupForm=function(){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:_this.onSignup},/*#__PURE__*/React.createElement(FormGroup,{controlId:\"email\",validationState:_this.state.emailValid},/*#__PURE__*/React.createElement(ControlLabel,null,\"Email\"),/*#__PURE__*/React.createElement(FormControl,{name:\"email\",type:\"email\",bsSize:\"large\",value:_this.state.email,onChange:_this.onEmailChange}),/*#__PURE__*/React.createElement(FormControl.Feedback,null)),/*#__PURE__*/React.createElement(FormGroup,{controlId:\"password\",validationState:_this.state.passwordValid},/*#__PURE__*/React.createElement(ControlLabel,null,\"Password\"),/*#__PURE__*/React.createElement(FormControl,{name:\"password\",type:\"password\",bsSize:\"large\",value:_this.state.password,onChange:_this.onPasswordChange}),/*#__PURE__*/React.createElement(FormControl.Feedback,null),/*#__PURE__*/React.createElement(HelpBlock,null,\"Must be at least 8 characters\")),/*#__PURE__*/React.createElement(FormGroup,{controlId:\"confirmPassword\",validationState:_this.state.confirmPasswordValid},/*#__PURE__*/React.createElement(ControlLabel,null,\"Confirm Password\"),/*#__PURE__*/React.createElement(FormControl,{name:\"confirmPassword\",type:\"password\",bsSize:\"large\",value:_this.state.confirmPassword,onChange:_this.onConfirmPasswordChange}),/*#__PURE__*/React.createElement(FormControl.Feedback,null)),/*#__PURE__*/React.createElement(Button,{block:true,bsSize:\"large\",type:\"submit\",disabled:_this.state.passwordValid!=='success'||_this.state.confirmPasswordValid!=='success'||_this.state.emailValid!=='success'},_this.state.loading&&/*#__PURE__*/React.createElement(Glyphicon,{glyph:\"refresh\",className:\"spinning\"}),\"Log in\"));};_this.state={loading:false,email:\"\",password:\"\",confirmPassword:\"\",confirmationCode:\"\",emailValid:undefined,passwordValid:undefined,confirmPasswordValid:undefined,confirmationCodeValid:undefined,user:undefined,redirect:false};return _this;}_createClass(Signup,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"Signup\"},this.state.user===undefined?this.showSignupForm():this.showConfirmationForm());}}]);return Signup;}(React.Component);export{Signup as default};","map":{"version":3,"sources":["/home/bw/Desktop/aws-bookstore-demo-app/assets/src/modules/signup/Signup.tsx"],"names":["Auth","React","Redirect","FormGroup","FormControl","ControlLabel","Button","Glyphicon","HelpBlock","emailRegex","Signup","props","onEmailChange","event","target","setState","email","value","emailValid","test","toLowerCase","onPasswordChange","password","passwordValid","length","onConfirmPasswordChange","confirmPassword","confirmPasswordValid","state","onConfirmationCodeChange","confirmationCode","confirmationCodeValid","onSignup","preventDefault","loading","signUp","username","user","alert","message","onConfirm","confirmSignUp","signIn","userHasAuthenticated","redirect","showConfirmationForm","showSignupForm","undefined","Component"],"mappings":"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","sourcesContent":["import { Auth } from \"aws-amplify\";\nimport React from \"react\";\nimport { Redirect } from 'react-router';\nimport { FormGroup, FormControl, ControlLabel, Button, Glyphicon, HelpBlock } from \"react-bootstrap\";\nimport \"./signup.css\";\nimport \"./home.css\";\n\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\ninterface SignupProps {\n  isAuthenticated: boolean;\n  userHasAuthenticated: (authenticated: boolean) => void;\n}\n\ninterface SignupState {\n  loading: boolean;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  confirmationCode: string;\n  emailValid: \"success\" | \"error\" | \"warning\" | undefined;\n  passwordValid: \"success\" | \"error\" | \"warning\" | undefined;\n  confirmPasswordValid: \"success\" | \"error\" | \"warning\" | undefined;\n  confirmationCodeValid: \"success\" | \"error\" | \"warning\" | undefined;\n  user: any;\n  redirect: boolean;\n}\n\nexport default class Signup extends React.Component<SignupProps, SignupState> {\n  constructor(props: SignupProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      emailValid: undefined,\n      passwordValid: undefined,\n      confirmPasswordValid: undefined,\n      confirmationCodeValid: undefined,\n      user: undefined,\n      redirect: false\n    };\n  }\n\n  onEmailChange = (event: React.FormEvent<FormControl>) => {\n    const target = event.target as HTMLInputElement;\n    this.setState({\n      email: target.value,\n      emailValid: emailRegex.test(target.value.toLowerCase()) ? 'success' : 'error'\n    });\n  }\n\n  onPasswordChange = (event: React.FormEvent<FormControl>) => {\n    const target = event.target as HTMLInputElement;\n    this.setState({\n      password: target.value,\n      passwordValid: target.value.length < 8 ? 'error' : 'success'\n    });\n  }\n\n  onConfirmPasswordChange = (event: React.FormEvent<FormControl>) => {\n    const target = event.target as HTMLInputElement;\n    this.setState({\n      confirmPassword: target.value,\n      confirmPasswordValid: target.value !== this.state.password ? 'error' : 'success'\n    });\n  }\n\n  onConfirmationCodeChange = (event: React.FormEvent<FormControl>) => {\n    const target = event.target as HTMLInputElement;\n    this.setState({\n      confirmationCode: target.value,\n      confirmationCodeValid: target.value.length > 0 ? 'error' : 'success'\n    });\n  }\n\n  onSignup = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n  \n    try {\n      const user = await Auth.signUp({\n        username: this.state.email,\n        password: this.state.password\n      });\n      this.setState({ user, loading: false });\n    } catch (e) {\n      alert(e.message);\n      this.setState({ loading: false });\n    }\n  }\n  \n  onConfirm = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n  \n    try {\n      await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\n      await Auth.signIn(this.state.email, this.state.password);\n      this.props.userHasAuthenticated(true);\n      this.setState({ redirect: true })\n    } catch (e) {\n      alert(e.message);\n      this.setState({ loading: false });\n    }\n  }\n\n  showConfirmationForm = () => {\n    if (this.state.redirect) return <Redirect to='/' />\n\n    return (\n      <form onSubmit={this.onConfirm}>\n        <FormGroup controlId=\"confirmationCode\">\n          <ControlLabel>Confirmation code</ControlLabel>\n          <FormControl\n            name=\"code\"\n            type=\"tel\"\n            bsSize=\"large\"\n            value={this.state.confirmationCode}\n            onChange={this.onConfirmationCodeChange} />\n          <FormControl.Feedback />\n          <HelpBlock>A confirmation code will be sent to the email address provided</HelpBlock>\n        </FormGroup>\n        <Button\n          block\n          bsSize=\"large\"\n          type=\"submit\"\n          disabled={this.state.confirmationCodeValid === 'success'}>\n          {this.state.loading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}Confirm\n        </Button>\n      </form>\n    );\n  }\n\n  showSignupForm = () => {\n    return (\n      <form onSubmit={this.onSignup}>\n        <FormGroup controlId=\"email\" validationState={this.state.emailValid}>\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            name=\"email\"\n            type=\"email\"\n            bsSize=\"large\"\n            value={this.state.email}\n            onChange={this.onEmailChange} />\n          <FormControl.Feedback />\n        </FormGroup>\n        <FormGroup controlId=\"password\" validationState={this.state.passwordValid}>\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            name=\"password\"\n            type=\"password\"\n            bsSize=\"large\"\n            value={this.state.password}\n            onChange={this.onPasswordChange} />\n          <FormControl.Feedback />\n          <HelpBlock>Must be at least 8 characters</HelpBlock>\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" validationState={this.state.confirmPasswordValid}>\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            name=\"confirmPassword\"\n            type=\"password\"\n            bsSize=\"large\"\n            value={this.state.confirmPassword}\n            onChange={this.onConfirmPasswordChange} />\n          <FormControl.Feedback />\n        </FormGroup>\n        <Button\n          block\n          bsSize=\"large\"\n          type=\"submit\"\n          disabled={this.state.passwordValid !== 'success' || this.state.confirmPasswordValid !== 'success' || this.state.emailValid !== 'success'}>\n          {this.state.loading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}Log in\n        </Button>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Signup\">\n        {this.state.user === undefined ? this.showSignupForm() : this.showConfirmationForm()}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}