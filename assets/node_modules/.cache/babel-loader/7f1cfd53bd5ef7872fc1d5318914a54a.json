{"ast":null,"code":"import _regeneratorRuntime from \"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/bw/Desktop/aws-bookstore-demo-app/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/bw/Desktop/aws-bookstore-demo-app/assets/src/common/AddToCart.tsx\";\nimport React from 'react';\nimport { API } from 'aws-amplify';\nimport { Redirect } from 'react-router';\nimport { Glyphicon } from 'react-bootstrap';\n\nvar AddToCart = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddToCart, _React$Component);\n\n  var _super = _createSuper(AddToCart);\n\n  function AddToCart(props) {\n    var _this;\n\n    _classCallCheck(this, AddToCart);\n\n    _this = _super.call(this, props);\n    _this.onAddToCart = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var bookInCart;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return API.get(\"cart\", \"/cart/\".concat(_this.props.bookId), null);\n\n            case 3:\n              bookInCart = _context.sent;\n\n              // if the book already exists in the cart, increase the quantity\n              if (bookInCart) {\n                API.put(\"cart\", \"/cart\", {\n                  body: {\n                    bookId: _this.props.bookId,\n                    quantity: bookInCart.quantity + 1\n                  }\n                }).then(function () {\n                  return _this.setState({\n                    toCart: true\n                  });\n                });\n              } // if the book does not exist in the cart, add it\n              else {\n                  API.post(\"cart\", \"/cart\", {\n                    body: {\n                      bookId: _this.props.bookId,\n                      price: _this.props.price,\n                      quantity: 1\n                    }\n                  }).then(function () {\n                    return _this.setState({\n                      toCart: true\n                    });\n                  });\n                }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.getVariant = function () {\n      var style = \"btn btn-black\";\n      return _this.props.variant && _this.props.variant === \"center\" ? style + \" btn-black-center\" : style + \" pull-right\";\n    };\n\n    _this.state = {\n      loading: false,\n      toCart: false\n    };\n    return _this;\n  }\n\n  _createClass(AddToCart, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.toCart) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 35\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: this.getVariant(),\n        disabled: this.state.loading,\n        type: \"button\",\n        onClick: this.onAddToCart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(Glyphicon, {\n        glyph: \"refresh\",\n        className: \"spinning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 32\n        }\n      }), this.props.variant === \"buyAgain\" ? \"Buy again\" : \"Add to cart\");\n    }\n  }]);\n\n  return AddToCart;\n}(React.Component);\n\nexport default AddToCart;","map":{"version":3,"sources":["/home/bw/Desktop/aws-bookstore-demo-app/assets/src/common/AddToCart.tsx"],"names":["React","API","Redirect","Glyphicon","AddToCart","props","onAddToCart","setState","loading","get","bookId","bookInCart","put","body","quantity","then","toCart","post","price","getVariant","style","variant","state","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;IAaMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmC;AAAA;;AAAA;;AACjC,8BAAMA,KAAN;AADiC,UASnCC,WATmC,yEASrB;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,oBAAKC,QAAL,CAAc;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AADY;AAAA,qBAEaP,GAAG,CAACQ,GAAJ,CAAQ,MAAR,kBAAyB,MAAKJ,KAAL,CAAWK,MAApC,GAA8C,IAA9C,CAFb;;AAAA;AAENC,cAAAA,UAFM;;AAIZ;AACA,kBAAIA,UAAJ,EAAgB;AACdV,gBAAAA,GAAG,CAACW,GAAJ,CAAQ,MAAR,EAAgB,OAAhB,EAAyB;AACvBC,kBAAAA,IAAI,EAAE;AACJH,oBAAAA,MAAM,EAAE,MAAKL,KAAL,CAAWK,MADf;AAEJI,oBAAAA,QAAQ,EAAEH,UAAU,CAACG,QAAX,GAAsB;AAF5B;AADiB,iBAAzB,EAKGC,IALH,CAKQ;AAAA,yBAAM,MAAKR,QAAL,CAAc;AAC1BS,oBAAAA,MAAM,EAAE;AADkB,mBAAd,CAAN;AAAA,iBALR;AAQD,eATD,CAWA;AAXA,mBAYK;AACHf,kBAAAA,GAAG,CAACgB,IAAJ,CAAS,MAAT,EAAiB,OAAjB,EAA0B;AACxBJ,oBAAAA,IAAI,EAAE;AACJH,sBAAAA,MAAM,EAAE,MAAKL,KAAL,CAAWK,MADf;AAEJQ,sBAAAA,KAAK,EAAE,MAAKb,KAAL,CAAWa,KAFd;AAGJJ,sBAAAA,QAAQ,EAAE;AAHN;AADkB,mBAA1B,EAMGC,IANH,CAMQ;AAAA,2BAAM,MAAKR,QAAL,CAAc;AAC1BS,sBAAAA,MAAM,EAAE;AADkB,qBAAd,CAAN;AAAA,mBANR;AASD;;AA3BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATqB;;AAAA,UAuCnCG,UAvCmC,GAuCtB,YAAM;AACjB,UAAIC,KAAK,GAAG,eAAZ;AACA,aAAO,MAAKf,KAAL,CAAWgB,OAAX,IAAsB,MAAKhB,KAAL,CAAWgB,OAAX,KAAuB,QAA7C,GAAwDD,KAAK,sBAA7D,GAAsFA,KAAK,gBAAlG;AACD,KA1CkC;;AAGjC,UAAKE,KAAL,GAAa;AACXd,MAAAA,OAAO,EAAE,KADE;AAEXQ,MAAAA,MAAM,EAAE;AAFG,KAAb;AAHiC;AAOlC;;;;WAqCD,kBAAS;AACP,UAAI,KAAKM,KAAL,CAAWN,MAAf,EAAuB,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEvB,0BACE;AACE,QAAA,SAAS,EAAE,KAAKG,UAAL,EADb;AAEE,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWd,OAFvB;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAE,KAAKF,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKgB,KAAL,CAAWd,OAAX,iBAAsB,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALzB,EAMG,KAAKH,KAAL,CAAWgB,OAAX,KAAuB,UAAvB,8BANH,CADF;AAUD;;;;EA1DqBrB,KAAK,CAACuB,S;;AA6D9B,eAAenB,SAAf","sourcesContent":["import React from 'react';\nimport { API } from 'aws-amplify';\nimport { Redirect } from 'react-router';\nimport { Glyphicon } from 'react-bootstrap';\n\ninterface AddToCartProps {\n  bookId: string;\n  price: number;\n  variant?: string;\n}\n\ninterface AddToCartState {\n  loading: boolean;\n  toCart: boolean;\n}\n\nclass AddToCart extends React.Component<AddToCartProps, AddToCartState> {\n  constructor(props: AddToCartProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      toCart: false\n    };\n  }\n\n  onAddToCart = async () => {\n    this.setState({ loading: true });\n    const bookInCart = await API.get(\"cart\", `/cart/${this.props.bookId}`, null);\n\n    // if the book already exists in the cart, increase the quantity\n    if (bookInCart) {\n      API.put(\"cart\", \"/cart\", {\n        body: {\n          bookId: this.props.bookId,\n          quantity: bookInCart.quantity + 1\n        }\n      }).then(() => this.setState({\n        toCart: true\n      }));\n    }\n\n    // if the book does not exist in the cart, add it\n    else {\n      API.post(\"cart\", \"/cart\", {\n        body: {\n          bookId: this.props.bookId,\n          price: this.props.price,\n          quantity: 1,\n        }\n      }).then(() => this.setState({\n        toCart: true\n      }));\n    }\n  }\n\n  getVariant = () => {\n    let style = \"btn btn-black\"\n    return this.props.variant && this.props.variant === \"center\" ? style + ` btn-black-center` : style + ` pull-right`;\n  }\n\n  render() {\n    if (this.state.toCart) return <Redirect to='/cart' />\n    \n    return (\n      <button \n        className={this.getVariant()} \n        disabled={this.state.loading}\n        type=\"button\" \n        onClick={this.onAddToCart}>\n        {this.state.loading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n        {this.props.variant === \"buyAgain\" ? `Buy again` : `Add to cart`}\n      </button>\n    );\n  }\n}\n\nexport default AddToCart;"]},"metadata":{},"sourceType":"module"}